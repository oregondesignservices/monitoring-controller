# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

---
trigger:
  branches:
    include:
      - master
  tags:
    include:
      - "v*"


variables:
  imageName: 'monitoring-controller'
  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    newDeployTag: stable-$(Build.BuildNumber)
    deployRepoRef: master
    imageTags: |
      latest
      latest-$(Build.BuildNumber)
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags') }}:
    imageTags: |
      $(Build.SourceBranchName)

  # pipelines require that all repositories are accessible before you ever use them.
  # Since we want to push tag changes from master to master (and develop to develop)
  # but do NOT want to push tag changes on PR branches, we simply set the deploy repo
  # branch to master. We won't use it anyway.
  ${{ if eq(variables['deployRepoRef'], '') }}:
    deployRepoRef: master

resources:
  repositories:
    - repository: deploy-monitoring-controller
      type: github
      endpoint: oregondesignservices
      name: oregondesignservices/deploy-monitoring-controller
      ref: $(deployRepoRef)

pool:
  vmImage: "ubuntu-18.04"

stages:
  - stage: docker
    jobs:
      - job: build_and_publish_image
        condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/develop'), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
        steps:
          - task: Docker@2
            displayName: Login to docker hub
            inputs:
              command: login
              containerRegistry: morphicworld dockerhub
          - task: Docker@2
            displayName: build and push image
            inputs:
              repository: morphicworld/monitoring-controller
              command: buildAndPush
              Dockerfile: Dockerfile
              tags: $(imageTags)
  - stage: update_deploy_tag
    jobs:
      - job: update_deploy_tag
        condition: ne(variables['newDeployTag'], '')
        steps:
          - checkout: deploy-monitoring-controller
            persistCredentials: true
            path: deploy-monitoring-controller
          - task: Bash@3
            env:
              NEWTAG: $(newDeployTag)
              BRANCH: $(deployRepoRef)
            inputs:
              targetType: 'inline'
              workingDirectory: resources/
              script: |
                set -e
                set -x
                echo "installing kustomize"
                wget "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" -O install_kustomize.sh
                bash install_kustomize.sh

                git checkout ${BRANCH}

                ls -al
                echo "setting new image tag"
                ./kustomize edit set image morphicworld/monitoring-controller=morphicworld/monitoring-controller:${NEWTAG}

                cat kustomization.yaml

                git config --global user.email "buildmaster@raisingthefloor.org"
                git config --global user.name "buildmaster"
                git commit kustomization.yaml -m "buildmaster: updating tag to ${NEWTAG}"
                git push