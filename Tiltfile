# Allows for faster local builds that push into kube
local_resource(
  'go-compile-controller',
  'CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -o manager main.go',
  deps=["./main.go", "./api", "./controllers", "./internal"])

local_resource(
  'go-compile-testserver',
  'CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -o http-test-server cmd/httptestserver/main.go',
  deps=["cmd/httptestserver"])

dev_dockerfile = """
# This is a super minimal image that just places the controller binary
# into place. This makes for much faster deployment cycles with local dev.
FROM alpine
WORKDIR /
COPY manager /manager .
ENTRYPOINT ["/manager"]
"""

docker_build('localhost:5000/monitoring-controller', '.',
             dockerfile_contents=dev_dockerfile,
             only=["./manager"])

httptest_dockerfile = """
# This is a super minimal image that just places the controller binary
# into place. This makes for much faster deployment cycles with local dev.
FROM alpine
WORKDIR /
COPY http-test-server /http-test-server .
ENTRYPOINT ["/http-test-server"]
"""

docker_build('localhost:5000/http-test-server', '.',
             dockerfile_contents=httptest_dockerfile,
             only=["./http-test-server"])

k8s_yaml(kustomize('config/default'))
k8s_yaml('config/httptestserver/install.yaml')

# Name is autogenerated, which is why its goofy.
# This allows you to `curl localhost:9090/metrics`
#k8s_resource(workload='monitoring-controller-controller-manager', port_forwards=["9090:8080"])

# Executes integration tests. This is currently manually triggered, but
# we may want it to watch the source area and build as it changes.
local_resource('test-runner',
    cmd='go run cmd/testrunner/*',
    trigger_mode=TRIGGER_MODE_MANUAL,
    auto_init=False
)