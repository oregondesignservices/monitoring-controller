# Allows for faster local builds that push into kube
local_resource(
  'go-compile-controller',
  'CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -o manager main.go',
  deps=["./main.go", "./api", "./controllers", "./internal"])

local_resource(
  'go-compile-testserver',
  'CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -o mock-server tester/mockserver/main.go',
  deps=["./tester/mockserver", "./tester/common"])

dev_dockerfile = """
# This is a super minimal image that just places the controller binary
# into place. This makes for much faster deployment cycles with local dev.
FROM alpine
WORKDIR /
COPY manager /manager .
ENTRYPOINT ["/manager"]
"""

docker_build('localhost:5000/monitoring-controller', '.',
             dockerfile_contents=dev_dockerfile,
             only=["./manager"])

httpmock_dockerfile = """
# This is a super minimal image that just places the controller binary
# into place. This makes for much faster deployment cycles with local dev.
FROM alpine
WORKDIR /
COPY mock-server /mock-server .
ENTRYPOINT ["/mock-server"]
"""

docker_build('localhost:5000/mock-server', '.',
             dockerfile_contents=httpmock_dockerfile,
             only=["./mock-server"])

k8s_yaml(kustomize('config/default'))
k8s_yaml('config/mockserver/install.yaml')

# Name is autogenerated, which is why its goofy.
# This allows you to `curl localhost:9090/metrics`
k8s_resource(workload='monitoring-controller-controller-manager', port_forwards=["9090:8080"])
k8s_resource(workload='mock-server', port_forwards=["9091:80"])

# Executes integration tests. This is currently manually triggered, but
# we may want it to watch the source area and build as it changes.
local_resource('test-runner',
    cmd='go run tester/runner/*',
    resource_deps=['monitoring-controller-controller-manager', 'mock-server'],
    deps=["./tester/common", "./tester/runner"]
)